Question 21: Create a sample drawing app whose background should be white and where the user just draws something.

Hint 1:- Use the inbuilt paint library of Dart.
source code:
import 'package:flutter/material.dart';
import 'dart:ui' as ui;

class SimpleDrawingApp extends StatefulWidget {
  const SimpleDrawingApp({super.key});

  @override
  State<SimpleDrawingApp> createState() => _SimpleDrawingAppState();
}

class _SimpleDrawingAppState extends State<SimpleDrawingApp> {
  // List to store drawn points
  List<Offset?> _points = [];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Simple Drawing App')),
      body: GestureDetector(
        onPanStart: (details) {
          setState(() {
            _points.add(details.localPosition);
          });
        },
        onPanUpdate: (details) {
          setState(() {
            _points.add(details.localPosition);
          });
        },
        onPanEnd: (details) {
          setState(() {
            _points.add(null); // Add a separator to indicate a new stroke
          });
        },
        child: CustomPaint(
          painter: DrawingPainter(_points),
          size: Size.infinite,
        ),
      ),
      backgroundColor: Colors.white,
    );
  }
}

// Custom painter that draws lines between points
class DrawingPainter extends CustomPainter {
  final List<Offset?> points;
  DrawingPainter(this.points);

  @override
  void paint(Canvas canvas, Size size) {
    final paint = Paint()
      ..color = Colors.black
      ..strokeCap = StrokeCap.round
      ..strokeWidth = 4.0;

    for (int i = 0; i < points.length - 1; i++) {
      if (points[i] != null && points[i + 1] != null) {
        canvas.drawLine(points[i]!, points[i + 1]!, paint);
      }
    }
  }

  @override
  bool shouldRepaint(DrawingPainter oldDelegate) => true;
}
